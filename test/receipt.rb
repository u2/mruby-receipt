include RLP
include Ethereum

assert("test_receipt2") do
  # raw_receipt = "f90182a001d8df3bb34b5f271f56cfb9ad778ccb5ced96204e44aa8cc86921fd095fb5b2a03ac76057d3ef33c1de3f1588efe21aece411989cf3fe31f10df629bd21dddc5e828517bf838f794aaa81ab1d9b41e2b740f3972f8b6b2132175afe4e1a0cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5a000000000000000000000000019e49d3efd4e81dc82943ad9791c1916e2229138a0000000000000000000000000000000000000000000000000000000000000c35080c0"
  raw_receipt = "f901c8a001d8df3bb34b5f271f56cfb9ad778ccb5ced96204e44aa8cc86921fd095fb5b2a04e49a0091a4816bbad4567b89ee172c08de87678660c3466fd34570817d46a07828517bf87cf87a94aaa81ab1d9b41e2b740f3972f8b6b2132175afe4f842a0cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5a000000000000000000000000019e49d3efd4e81dc82943ad9791c1916e2229138a0000000000000000000000000000000000000000000000000000000000000c35080c0"
  data = [raw_receipt].pack('H*')
  x = RLP.decode(data, { sedes: Receipt })

  assert_equal x.quota_used, "8517"
end
